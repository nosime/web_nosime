version: '3.8'

services:
  # PostgreSQL Database (ARM64 compatible)
  database:
    image: postgres:16-alpine
    container_name: database
    environment:
      - POSTGRES_DB=MovieDB
      - POSTGRES_USER=nosime
      - POSTGRES_PASSWORD=Nosime44@
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - web-nosime-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nosime -d MovieDB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Node.js Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_TYPE=postgres
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=nosime
      - DB_PASSWORD=Nosime44@
      - DB_NAME=MovieDB
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - web-nosime-network
    restart: unless-stopped

  # Angular Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    environment:
      - API_URL=http://localhost:5000/api
    ports:
      - "4000:4000"
    depends_on:
      - server
    networks:
      - web-nosime-network
    restart: unless-stopped

volumes:
  db_data:

networks:
  web-nosime-network:
    driver: bridge
